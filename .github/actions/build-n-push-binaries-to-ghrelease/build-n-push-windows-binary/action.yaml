name: Build, test and push Windows Binary

description: "Build, test and push Windows binary"

runs:
  using: "composite"
  steps:
    - uses: actions/setup-python@v3
      with:
        python-version: "3.7"
    # Step 1: Build
    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    - name: Generate Binary
      shell: bash
      run: |
        pyinstaller --distpath ./dist --log-level=DEBUG dvc.spec
        cp ./dist/dvc.exe .
    # Step 2: Test with Postgres
    - name: Smoke Test
      shell: bash
      run: |
        echo "Now running simple smoke test to test generated binary"
        ./dvc version
    - name: Start PostgreSQL on Windows
      shell: powershell
      run: |
        $pgService = Get-Service -Name postgresql*
        Set-Service -InputObject $pgService -Status running -StartupType automatic
        Start-Process -FilePath "$env:PGBIN\pg_isready" -Wait -PassThru
    - name: Create test user on Windows
      shell: powershell
      run: |
        & $env:PGBIN\psql --command="CREATE USER test PASSWORD 'test'" --command="\du"
    - name: Create test database
      shell: powershell
      run: |
        & $env:PGBIN\createdb --owner=test test
        $env:PGPASSWORD = 'test'
        & $env:PGBIN\psql --username=test --host=localhost --list test
    - name: Run DVC
      shell: bash
      run: |
        set -a
        source ./.github/assets/.github.ci.env
        echo "Now checking the env var.."
        printenv
        echo "Now running dvc....."
        ./dvc db ping
        ./dvc db init
        ./dvc db current
        ./dvc db upgrade --no-confirm
    # Step 3: Zip and Upload artifact
    - name: zip windows artifact
      shell: powershell
      run: |
        powershell Compress-Archive ./dist windows.zip
    - name: upload Windows artifact
      uses: actions/upload-artifact@v2
      with:
        name: uploads
        path: windows.zip